namespace Compiler;

public static class Opcodes
{
    public const byte OpNop = 0x00;
    public const byte OpHalt = 0x01;
    public const byte OpLoadConst = 0x02;
    public const byte OpLocalSet = 0x03;
    public const byte OpLocalLoad = 0x04;
    public const byte OpLoadLocalAddress = 0x05;
    public const byte OpAlloc = 0x06;
    public const byte OpTypedAlloc = 0x07;
    public const byte OpFree = 0x08;
    public const byte OpFieldSet = 0x09;
    public const byte OpFieldLoad = 0x0A;
    public const byte OpCall = 0x0B;
    public const byte OpExternFastcall = 0x0C;
    public const byte OpExternStdcall = 0x0D;
    public const byte OpReturn = 0x0E;
    public const byte OpJump = 0x0F;
    public const byte OpJumpIfTrue = 0x10;
    public const byte OpJumpIfFalse = 0x11;
    public const byte OpCast = 0x12;
    public const byte OpIntegerAdd = 0x13;
    public const byte OpIntegerAdd2 = 0x14;
    public const byte OpIntegerAdd4 = 0x15;
    public const byte OpIntegerAdd8 = 0x16;
    public const byte OpIntegerSubtract = 0x17;
    public const byte OpIntegerSubtract2 = 0x18;
    public const byte OpIntegerSubtract4 = 0x19;
    public const byte OpIntegerSubtract8 = 0x1A;
    public const byte OpIntegerMultiply = 0x1B;
    public const byte OpIntegerMultiply2 = 0x1C;
    public const byte OpIntegerMultiply4 = 0x1D;
    public const byte OpIntegerMultiply8 = 0x1E;
    public const byte OpIntegerDivide = 0x1F;
    public const byte OpIntegerDivide2 = 0x20;
    public const byte OpIntegerDivide4 = 0x21;
    public const byte OpIntegerDivide8 = 0x22;
    public const byte OpFloatAdd = 0x23;
    public const byte OpFloatAdd2 = 0x24;
    public const byte OpFloatSubtract = 0x25;
    public const byte OpFloatSubtract2 = 0x26;
    public const byte OpFloatMultiply = 0x27;
    public const byte OpFloatMultiply2 = 0x28;
    public const byte OpFloatDivide = 0x29;
    public const byte OpFloatDivide2 = 0x2A;
    public const byte OpLeftShift = 0x2B;
    public const byte OpLeftShift2 = 0x2C;
    public const byte OpLeftShift4 = 0x2D;
    public const byte OpLeftShift8 = 0x2E;
    public const byte OpRightShift = 0x2F;
    public const byte OpRightShift2 = 0x30;
    public const byte OpRightShift4 = 0x31;
    public const byte OpRightShift8 = 0x32;
    public const byte OpCompareGreater = 0x33;
    public const byte OpCompareGreater2 = 0x34;
    public const byte OpCompareGreater4 = 0x35;
    public const byte OpCompareGreater8 = 0x36;
    public const byte OpCompareLess = 0x37;
    public const byte OpCompareLess2 = 0x38;
    public const byte OpCompareLess4 = 0x39;
    public const byte OpCompareLess8 = 0x3A;
    public const byte OpCompareGreaterU = 0x3B;
    public const byte OpCompareGreater2U = 0x3C;
    public const byte OpCompareGreater4U = 0x3D;
    public const byte OpCompareGreater8U = 0x3E;
    public const byte OpCompareLessU = 0x3F;
    public const byte OpCompareLess2U = 0x40;
    public const byte OpCompareLess4U = 0x41;
    public const byte OpCompareLess8U = 0x42;
    public const byte OpCompareGreaterF = 0x43;
    public const byte OpCompareGreaterF2 = 0x44;
    public const byte OpCompareLessF = 0x45;
    public const byte OpCompareLessF2 = 0x46;
    public const byte OpCompareEquals = 0x47;
    public const byte OpCompareEquals2 = 0x48;
    public const byte OpCompareEquals4 = 0x49;
    public const byte OpCompareEquals8 = 0x4A;
    public const byte OpAnd = 0x4B;
    public const byte OpAnd2 = 0x4C;
    public const byte OpAnd4 = 0x4D;
    public const byte OpAnd8 = 0x4E;
    public const byte OpOr = 0x4F;
    public const byte OpOr2 = 0x50;
    public const byte OpOr4 = 0x51;
    public const byte OpOr8 = 0x52;
    public const byte OpNot = 0x53;
    public const byte OpNot2 = 0x54;
    public const byte OpNot4 = 0x55;
    public const byte OpNot8 = 0x56;
}